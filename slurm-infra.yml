---

- hosts: openstack
  tasks:
    - import_tasks: tasks/install-dependencies.yml

    # Add the identity stack to the cluster and configure it as the gateway
    - include_role:
        name: jasmin.cluster-infra
      vars:
        cluster_name: "{{ identity_stack_name }}"
        cluster_stack_update: false
        cluster_gw_group: "{{ identity_gw_group_name }}"

    # Provision the SLURM infrastructure
    - import_tasks: tasks/infra/provision.yml
      vars:
        # These are the groups to use when no fixed IP is given
        cluster_groups: "{{ slurm_groups_no_ip }}"
        # These are the groups to use when a fixed IP is given
        cluster_groups_fixed_ip: "{{ slurm_groups_fixed_ip }}"
        # Tag to assign to  the cluster
        cluster_tag: "{{ cluster_type.slurm }}"

- hosts: cluster
  become: true
  tasks:
    - import_tasks: tasks/network/hosts.yml
    - import_tasks: tasks/network/firewall.yml

- hosts: slurm
  become: true
  roles:
    - resmo.ntp
  # Join the Slurm hosts to the FreeIPA realm
  tasks:
    - include_tasks: tasks/identity/freeipa_client.yml

# Set the permissions for the cluster in FreeIPA
- hosts: freeipa_servers
  become: true
  tasks:
    - include_tasks: tasks/identity/cluster_permissions.yml
  vars:
    # Users in the cluster group should get SSH access
    permit_user_ssh: true

- hosts: openstack
  tasks:
    - name: Import configuration from storage stack
      import_tasks: tasks/storage_stack.yml
      when:
        - storage_name is defined
        - cluster_state | default('present') | lower == 'present'

- import_playbook: nfs.yml
  when:
    - hostvars.localhost.storage_type is defined
    - hostvars.localhost.storage_type == 'nfs'

- import_playbook: gluster.yml
  when:
    - hostvars.localhost.storage_type is defined
    - hostvars.localhost.storage_type == 'gluster'

- import_playbook: beegfs.yml
  when:
    - hostvars.localhost.storage_type is defined
    - hostvars.localhost.storage_type == 'beegfs'

- hosts:
    - "login"
    - "compute"
  become: true
  pre_tasks:
    - name: Ensure the OpenHPC package repo rpm is present
      yum:
        name: "https://github.com/openhpc/ohpc/releases/download/v1.3.GA/ohpc-release-1.3-1.el7.x86_64.rpm"
        state: present

    - name: Ensure latest python is present
      yum:
        name: python
        state: latest
  roles:
    - role: stackhpc.openhpc
      openhpc_enable:
        control: "{{ inventory_hostname in groups['login'] }}"
        batch: "{{ inventory_hostname in groups['compute'] }}"
        runtime: true
      openhpc_cluster_name: "{{ cluster_name }}"
      openhpc_packages: "{{ slurm_packages }}"
      openhpc_slurm_partitions: "{{ slurm_partitions }}"
      openhpc_slurm_control_host: "{{ groups['login'] | first }}"

# - import_playbook: validation.yml
#   when:
#     - validation is defined
#     - validation | bool
