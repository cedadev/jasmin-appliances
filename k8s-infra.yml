---
#####
## Playbook that provisions and then configures a Kubernetes
## cluster on OpenStack
#####

# Setting this in a separate play is the only way to avoid a recursive templating error
- import_playbook: k8s-infra-variables.yml
  when: cluster_k8s_state | lower == 'present'

# Provision a separate stack for the bastion
- hosts: openstack
  roles:
    - role: jasmin.cluster-infra
      vars:
        cluster_name: "{{ cluster_gw_name }}"
        cluster_groups:
          - "{{ cluster_gw }}"
      when: cluster_k8s_state | lower == 'present'

# Provision the cluster infrastructure
- hosts: openstack
  roles:
    - role: jasmin.cluster-infra
      vars:
        cluster_name: "{{ cluster_k8s_name }}"
        cluster_state: "{{ cluster_k8s_state }}"
        cluster_groups:
          - name: kube-masters
            user: "{{ cluster_deploy_user }}"
            node_resource: "Cluster::Node"
            nodenet_resource: "Cluster::NodeNet1"
            num_nodes: "{{ cluster_num_masters }}"
            flavor: "{{ cluster_master_flavor | default('j3.medium') }}"
            root_volume_size: "{{ cluster_root_volume_size | default(20) }}"
          - name: kube-workers
            user: "{{ cluster_deploy_user }}"
            node_resource: "Cluster::Node"
            nodenet_resource: "Cluster::NodeNet1"
            num_nodes: "{{ cluster_num_workers }}"
            flavor: "{{ cluster_worker_flavor | default('j3.medium') }}"
            root_volume_size: "{{ cluster_root_volume_size | default(20) }}"

# Do the configuration
- import_playbook: k8s-infra-configure.yml
  vars:
    cluster_name: "{{ cluster_k8s_name }}"
    cloud_provider: openstack
    openstack_trust_id: "{{ hostvars['localhost']['openstack_trust_id'] }}"
    openstack_user_id: "{{ hostvars['localhost']['openstack_user_id'] }}"
    openstack_project_id: "{{ hostvars['localhost']['openstack_project_id'] }}"
  when: cluster_k8s_state | lower == 'present'

# Delete the bastion
- hosts: openstack
  roles:
    - role: jasmin.cluster-infra
      vars:
        cluster_name: "{{ cluster_gw_name }}"
        cluster_groups:
          - "{{ cluster_gw }}"
        cluster_state: absent
